{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Section/Section.js","data/buttonsOptions.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","BUTTONS_OPTIONS","FeedbackButton","feedback","onLeaveFeedback","type","optionButton","data-feedback","onClick","FeedbackOptions","options","map","option","index","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","listItems","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","target","dataset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,aAAe,wC,gBCAjCD,EAAOC,QAAU,CAAC,UAAY,gC,uJCgBfC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,MCPMI,EAAkB,CAAC,OAAQ,UAAW,O,gBCG7CC,EAAiB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAClC,OACE,wBACEC,KAAK,SACLP,UAAWC,IAAEO,aACbC,gBAAeJ,EACfK,QAASJ,EAJX,SAMGD,KAoBQM,EAfS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASN,EAAsB,EAAtBA,gBAClC,OAAOM,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACjB,cAAC,EAAD,CAEEV,SAAUS,EACVR,gBAAiBA,GAFZS,OCXIC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,K,gBC4B3BC,MA1Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,mCACa,IAAVD,EACC,cAAC,EAAD,CAAcL,QAAQ,sBAEtB,qBAAIjB,UAAWC,IAAEuB,UAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,c,MCRK,SAASE,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBP,EADqB,KACfQ,EADe,OAEED,mBAAS,GAFX,mBAErBN,EAFqB,KAEZQ,EAFY,OAGNF,mBAAS,GAHH,mBAGrBL,EAHqB,KAGhBQ,EAHgB,KAsBtBC,EAAqB,WACzB,OAAOX,EAAOC,EAAUC,GAOpBC,EAAQQ,IACRP,EAJGQ,KAAKC,MAAc,IAAPb,EAAcW,KAAwB,GAKrDxB,EA3BgB,SAAC,GAErB,OAFoC,EAAb2B,OACKC,QAApB7B,UAEN,IAAK,OACHsB,EAAQR,EAAO,GACf,MACF,IAAK,UACHS,EAAWR,EAAU,GACrB,MACF,IAAK,MACHS,EAAOR,EAAM,GACb,MACF,QACE,SAgBN,OACE,gCACE,cAAC,EAAD,CAASvB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEc,QAAST,EACTG,gBAAiBA,MAGrB,cAAC,EAAD,CAASR,MAAM,aAAf,SACE,cAAC,EAAD,CACEqB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,SClD9BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c6e3bfa9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__19Geh\",\"title\":\"Section_title__3aOA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionButton\":\"FeedbackOptions_optionButton__3hRdU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItems\":\"Statistics_listItems__LXPvh\"};","import PropTypes from 'prop-types';\nimport s from '../../components/Section/Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Section;\n","export const BUTTONS_OPTIONS = ['good', 'neutral', 'bad'];\n","import PropTypes from 'prop-types';\nimport s from '../../components/FeedbackOptions/FeedbackOptions.module.css';\n\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\n  return (\n    <button\n      type=\"button\"\n      className={s.optionButton}\n      data-feedback={feedback}\n      onClick={onLeaveFeedback}\n    >\n      {feedback}\n    </button>\n  );\n};\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map((option, index) => (\n    <FeedbackButton\n      key={index}\n      feedback={option}\n      onLeaveFeedback={onLeaveFeedback}\n    />\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\nimport s from '../../components/Statistics/Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      {total === 0 ? (\n        <Notification message=\"No feedback given\" />\n      ) : (\n        <ul className={s.listItems}>\n          <li>Good: {good}</li>\n          <li>Neutral: {neutral}</li>\n          <li>Bad: {bad}</li>\n          <li>Total: {total}</li>\n          <li>Positive feedback: {positivePercentage} %</li>\n        </ul>\n      )}\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import { useState } from 'react';\nimport Section from './components/Section/Section';\nimport { BUTTONS_OPTIONS } from './data/buttonsOptions';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport './App.css';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleOptions = ({ target }) => {\n    const { feedback } = target.dataset;\n    switch (feedback) {\n      case 'good':\n        setGood(good + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good * 100) / countTotalFeedback() || 0);\n  };\n\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage();\n  const onLeaveFeedback = handleOptions;\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={BUTTONS_OPTIONS}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}